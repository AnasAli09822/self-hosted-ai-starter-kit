volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  supabase_db_storage:
  supabase_storage_storage:

networks:
  demo:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['demo']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - OLLAMA_HOST=ollama:11434
  env_file:
    - .env

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['demo']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ['demo']
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=ollama:11434
  command:
    - "-c"
    - "sleep 3; ollama pull llama3.2"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks: ['demo']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    hostname: n8n-import
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/demo-data/credentials && n8n import:workflow --separate --input=/demo-data/workflows"
    volumes:
      - ./n8n/demo-data:/demo-data
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/demo-data:/demo-data
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-gpu-amd:
    profiles: ["gpu-amd"]
    <<: *service-ollama
    image: ollama/ollama:rocm
    devices:
      - "/dev/kfd"
      - "/dev/dri"

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu

  ollama-pull-llama-gpu-amd:
    profiles: [gpu-amd]
    <<: *init-ollama
    image: ollama/ollama:rocm
    depends_on:
     - ollama-gpu-amd

  # Supabase services for comprehensive data management
  supabase-db:
    image: supabase/postgres:15.1.0.117
    hostname: supabase-db
    container_name: supabase-db
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=localhost
    volumes:
      - supabase_db_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U postgres -d postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  supabase-studio:
    image: supabase/studio:20240326-5e5586d
    hostname: supabase-studio
    container_name: supabase-studio
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 3001:3000
    environment:
      - SUPABASE_URL=http://supabase-kong:8000
      - SUPABASE_PUBLIC_URL=http://localhost:8000
      - SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0

  supabase-kong:
    image: kong:2.8.1
    hostname: supabase-kong
    container_name: supabase-kong
    networks: ['demo']
    restart: unless-stopped
    ports:
      - 8000:8000
      - 8443:8443
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth,http-log
      - KONG_NGINX_PROXY_PROXY_BUFFER_SIZE=160k
      - KONG_NGINX_PROXY_PROXY_BUFFERS=64 160k
    volumes:
      - ./supabase/kong.yml:/var/lib/kong/kong.yml:ro

  supabase-auth:
    image: supabase/gotrue:v2.143.0
    hostname: supabase-auth
    container_name: supabase-auth
    networks: ['demo']
    restart: unless-stopped
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - API_EXTERNAL_URL=http://localhost:8000
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgresql://supabase_auth_admin:root@supabase-db:5432/postgres
      - GOTRUE_SITE_URL=http://localhost:3001
      - GOTRUE_URI_ALLOW_LIST=""
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_JWT_ADMIN_ROLES=service_role
      - GOTRUE_JWT_AUD=authenticated
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - GOTRUE_EXTERNAL_EMAIL_ENABLED=true
      - GOTRUE_MAILER_AUTOCONFIRM=false
      - GOTRUE_SMTP_ADMIN_EMAIL=admin@example.com
      - GOTRUE_SMTP_HOST=supabase-inbucket
      - GOTRUE_SMTP_PORT=2500
      - GOTRUE_SMTP_USER=fake_mail_user
      - GOTRUE_SMTP_PASS=fake_mail_password
      - GOTRUE_SMTP_SENDER_NAME=fake_sender
    depends_on:
      supabase-db:
        condition: service_healthy

  supabase-rest:
    image: postgrest/postgrest:v12.0.1
    hostname: supabase-rest
    container_name: supabase-rest
    networks: ['demo']
    restart: unless-stopped
    environment:
      - PGRST_DB_URI=postgresql://authenticator:root@supabase-db:5432/postgres
      - PGRST_DB_SCHEMAS=public,storage,graphql_public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_APP_SETTINGS_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - PGRST_APP_SETTINGS_JWT_EXP=3600
    depends_on:
      supabase-db:
        condition: service_healthy

  supabase-realtime:
    image: supabase/realtime:v2.25.65
    hostname: supabase-realtime
    container_name: supabase-realtime
    networks: ['demo']
    restart: unless-stopped
    environment:
      - PORT=4000
      - DB_HOST=supabase-db
      - DB_PORT=5432
      - DB_USER=supabase_admin
      - DB_PASSWORD=root
      - DB_NAME=postgres
      - DB_AFTER_CONNECT_QUERY=SET search_path TO _realtime
      - DB_ENC_KEY=supabaserealtime
      - API_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - FLY_ALLOC_ID=fly123
      - FLY_APP_NAME=realtime
      - SECRET_KEY_BASE=UpNVntn3cDxHJpq99YMc1T1AQgQpc8kfYTuRgBiYa15BLrx8etQoXz3gZv1/u2oq
      - ERL_AFLAGS=-proto_dist inet_tcp
      - ENABLE_TAILSCALE=false
      - DNS_NODES=''
    depends_on:
      supabase-db:
        condition: service_healthy

  supabase-storage:
    image: supabase/storage-api:v0.43.11
    hostname: supabase-storage
    container_name: supabase-storage
    networks: ['demo']
    restart: unless-stopped
    environment:
      - ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
      - SERVICE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
      - POSTGREST_URL=http://supabase-rest:3000
      - PGRST_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-long
      - DATABASE_URL=postgresql://supabase_storage_admin:root@supabase-db:5432/postgres
      - FILE_SIZE_LIMIT=52428800
      - STORAGE_BACKEND=file
      - FILE_STORAGE_BACKEND_PATH=/var/lib/storage
      - TENANT_ID=stub
      - REGION=stub
      - GLOBAL_S3_BUCKET=stub
      - ENABLE_IMAGE_TRANSFORMATION=true
      - IMGPROXY_URL=http://supabase-imgproxy:5001
    volumes:
      - supabase_storage_storage:/var/lib/storage:z
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-rest:
        condition: service_started

  supabase-imgproxy:
    image: darthsim/imgproxy:v3.8.0
    hostname: supabase-imgproxy
    container_name: supabase-imgproxy
    networks: ['demo']
    restart: unless-stopped
    environment:
      - IMGPROXY_BIND=0.0.0.0:5001
      - IMGPROXY_LOCAL_FILESYSTEM_ROOT=/
      - IMGPROXY_USE_ETAG=true
      - IMGPROXY_ENABLE_WEBP_DETECTION=true
    volumes:
      - supabase_storage_storage:/var/lib/storage:z
