{
  "name": "Lead Generation and Qualification System",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lead-capture",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "lead-capture-webhook",
      "name": "Lead Capture Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [200, 300],
      "webhookId": "lead-capture-webhook-id"
    },
    {
      "parameters": {
        "jsCode": "// Extract and validate lead data\nconst leadData = $input.first().json;\n\n// Calculate lead score based on available information\nlet leadScore = 0;\n\n// Scoring criteria\nif (leadData.email) leadScore += 20;\nif (leadData.phone) leadScore += 20;\nif (leadData.company) leadScore += 15;\nif (leadData.job_title) leadScore += 15;\nif (leadData.budget && parseFloat(leadData.budget) > 1000) leadScore += 20;\nif (leadData.timeline && ['immediate', 'this_month'].includes(leadData.timeline)) leadScore += 10;\n\n// Source-based scoring\nconst sourceScoring = {\n  'website_form': 15,\n  'social_media': 10,\n  'referral': 25,\n  'advertisement': 12,\n  'cold_outreach': 5\n};\nleadScore += sourceScoring[leadData.source] || 5;\n\n// Determine qualification status\nlet qualificationStatus = 'new';\nif (leadScore >= 70) qualificationStatus = 'qualified';\nelse if (leadScore >= 40) qualificationStatus = 'warm';\nelse if (leadScore < 25) qualificationStatus = 'cold';\n\nreturn {\n  name: leadData.name || '',\n  email: leadData.email || '',\n  phone: leadData.phone || '',\n  company: leadData.company || '',\n  job_title: leadData.job_title || '',\n  budget: leadData.budget || '',\n  timeline: leadData.timeline || '',\n  source: leadData.source || 'unknown',\n  message: leadData.message || '',\n  lead_score: leadScore,\n  qualification_status: qualificationStatus,\n  utm_source: leadData.utm_source || '',\n  utm_campaign: leadData.utm_campaign || '',\n  utm_medium: leadData.utm_medium || '',\n  page_url: leadData.page_url || '',\n  created_at: new Date().toISOString(),\n  metadata: {\n    user_agent: leadData.user_agent || '',\n    ip_address: leadData.ip_address || '',\n    referrer: leadData.referrer || '',\n    form_id: leadData.form_id || '',\n    additional_fields: leadData.additional_fields || {}\n  }\n};"
      },
      "id": "process-lead-data",
      "name": "Process Lead Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 300]
    },
    {
      "parameters": {
        "authentication": "supabaseApi",
        "requestMethod": "POST",
        "url": "http://supabase-kong:8000/rest/v1/leads",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=representation"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "client_id",
              "value": "={{ $json.client_id || 'default-client-id' }}"
            },
            {
              "name": "name",
              "value": "={{ $json.name }}"
            },
            {
              "name": "email",
              "value": "={{ $json.email }}"
            },
            {
              "name": "phone",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "company",
              "value": "={{ $json.company }}"
            },
            {
              "name": "lead_source",
              "value": "={{ $json.source }}"
            },
            {
              "name": "lead_score",
              "value": "={{ $json.lead_score }}"
            },
            {
              "name": "qualification_status",
              "value": "={{ $json.qualification_status }}"
            },
            {
              "name": "metadata",
              "value": "={{ JSON.stringify($json.metadata) }}"
            }
          ]
        },
        "options": {
          "bodyContentType": "json"
        }
      },
      "id": "save-lead",
      "name": "Save Lead",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [600, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $('process-lead-data').first().json.qualification_status }}",
              "rightValue": "qualified",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-if-qualified",
      "name": "Check if Qualified",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [800, 300]
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "prompt": "=You are a professional sales AI assistant. Generate a personalized welcome email for a new qualified lead.\n\nLead Information:\n- Name: {{ $('process-lead-data').first().json.name }}\n- Company: {{ $('process-lead-data').first().json.company }}\n- Email: {{ $('process-lead-data').first().json.email }}\n- Budget: {{ $('process-lead-data').first().json.budget }}\n- Timeline: {{ $('process-lead-data').first().json.timeline }}\n- Message: {{ $('process-lead-data').first().json.message }}\n- Lead Score: {{ $('process-lead-data').first().json.lead_score }}\n\nCreate a professional, personalized email that:\n1. Thanks them for their interest\n2. Acknowledges their specific needs/message\n3. Mentions their company if provided\n4. Offers next steps (call/meeting)\n5. Creates urgency based on their timeline\n6. Maintains a professional but friendly tone\n\nGenerate the email subject and body:",
        "options": {
          "temperature": 0.7,
          "maxTokens": 400
        }
      },
      "id": "generate-qualified-lead-email",
      "name": "Generate Qualified Lead Email",
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [1000, 240],
      "credentials": {
        "ollamaApi": {
          "id": "local-ollama-service",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "={{ $env.BUSINESS_EMAIL }}",
        "toEmail": "={{ $('process-lead-data').first().json.email }}",
        "subject": "=Thank you for your interest - Let's schedule a call",
        "emailFormat": "html",
        "html": "={{ $('generate-qualified-lead-email').first().json.response || $('generate-qualified-lead-email').first().json.text }}",
        "options": {
          "ccEmail": "={{ $env.SALES_TEAM_EMAIL }}",
          "allowUnauthorizedCerts": true
        }
      },
      "id": "send-qualified-lead-email",
      "name": "Send Qualified Lead Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1200, 240],
      "credentials": {
        "smtp": {
          "id": "business-email-smtp",
          "name": "Business Email SMTP"
        }
      }
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "prompt": "=You are a professional sales AI assistant. Generate a nurturing email for a new lead that needs more qualification.\n\nLead Information:\n- Name: {{ $('process-lead-data').first().json.name }}\n- Company: {{ $('process-lead-data').first().json.company }}\n- Email: {{ $('process-lead-data').first().json.email }}\n- Message: {{ $('process-lead-data').first().json.message }}\n- Lead Score: {{ $('process-lead-data').first().json.lead_score }}\n- Status: {{ $('process-lead-data').first().json.qualification_status }}\n\nCreate a nurturing email that:\n1. Thanks them for their interest\n2. Provides valuable information related to their needs\n3. Asks qualifying questions\n4. Offers resources or free consultation\n5. Maintains engagement without being pushy\n6. Includes a soft call-to-action\n\nGenerate the email subject and body:",
        "options": {
          "temperature": 0.7,
          "maxTokens": 400
        }
      },
      "id": "generate-nurturing-email",
      "name": "Generate Nurturing Email",
      "type": "@n8n/n8n-nodes-langchain.lmOllama",
      "typeVersion": 1,
      "position": [1000, 360],
      "credentials": {
        "ollamaApi": {
          "id": "local-ollama-service",
          "name": "Local Ollama service"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "={{ $env.BUSINESS_EMAIL }}",
        "toEmail": "={{ $('process-lead-data').first().json.email }}",
        "subject": "=Thanks for your interest - Here's something that might help",
        "emailFormat": "html",
        "html": "={{ $('generate-nurturing-email').first().json.response || $('generate-nurturing-email').first().json.text }}",
        "options": {
          "allowUnauthorizedCerts": true
        }
      },
      "id": "send-nurturing-email",
      "name": "Send Nurturing Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [1200, 360],
      "credentials": {
        "smtp": {
          "id": "business-email-smtp",
          "name": "Business Email SMTP"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Create task for sales team for qualified leads\nconst leadData = $('process-lead-data').first().json;\nconst leadRecord = $('save-lead').first().json;\n\nif (leadData.qualification_status === 'qualified') {\n  return {\n    type: 'qualified_lead_followup',\n    priority: 'high',\n    title: `Follow up with qualified lead: ${leadData.name}`,\n    description: `New qualified lead (Score: ${leadData.lead_score}) from ${leadData.source}. Company: ${leadData.company}. Budget: ${leadData.budget}. Timeline: ${leadData.timeline}.`,\n    lead_id: leadRecord.id,\n    assigned_to: 'sales_team',\n    due_date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(), // 24 hours from now\n    metadata: {\n      lead_data: leadData,\n      contact_attempts: 0,\n      preferred_contact_method: leadData.phone ? 'phone' : 'email'\n    }\n  };\n}\n\nreturn null;"
      },
      "id": "create-sales-task",
      "name": "Create Sales Task",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [800, 200]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-task-created",
      "name": "Check Task Created",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1000, 200]
    },
    {
      "parameters": {
        "url": "={{ $env.SLACK_WEBHOOK_URL }}",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=🎯 New Qualified Lead Alert!"
            },
            {
              "name": "attachments",
              "value": "={{ JSON.stringify([{color: 'good', fields: [{title: 'Name', value: $('process-lead-data').first().json.name, short: true}, {title: 'Company', value: $('process-lead-data').first().json.company || 'Not provided', short: true}, {title: 'Email', value: $('process-lead-data').first().json.email, short: true}, {title: 'Phone', value: $('process-lead-data').first().json.phone || 'Not provided', short: true}, {title: 'Lead Score', value: $('process-lead-data').first().json.lead_score, short: true}, {title: 'Source', value: $('process-lead-data').first().json.source, short: true}, {title: 'Budget', value: $('process-lead-data').first().json.budget || 'Not specified', short: true}, {title: 'Timeline', value: $('process-lead-data').first().json.timeline || 'Not specified', short: true}], footer: 'Lead Management System', ts: Math.floor(Date.now() / 1000)}]) }}"
            }
          ]
        },
        "options": {
          "bodyContentType": "json"
        }
      },
      "id": "notify-sales-team",
      "name": "Notify Sales Team",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1200, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"lead_id\": \"{{ $('save-lead').first().json.id }}\",\n  \"message\": \"Thank you for your interest! We've received your information and will be in touch soon.\",\n  \"qualification_status\": \"{{ $('process-lead-data').first().json.qualification_status }}\",\n  \"lead_score\": {{ $('process-lead-data').first().json.lead_score }}\n}",
        "options": {}
      },
      "id": "lead-capture-response",
      "name": "Lead Capture Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1400, 300]
    }
  ],
  "connections": {
    "Lead Capture Webhook": {
      "main": [
        [
          {
            "node": "Process Lead Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Lead Data": {
      "main": [
        [
          {
            "node": "Save Lead",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Lead": {
      "main": [
        [
          {
            "node": "Check if Qualified",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Sales Task",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Qualified": {
      "main": [
        [
          {
            "node": "Generate Qualified Lead Email",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate Nurturing Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Qualified Lead Email": {
      "main": [
        [
          {
            "node": "Send Qualified Lead Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Qualified Lead Email": {
      "main": [
        [
          {
            "node": "Lead Capture Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Nurturing Email": {
      "main": [
        [
          {
            "node": "Send Nurturing Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Nurturing Email": {
      "main": [
        [
          {
            "node": "Lead Capture Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Sales Task": {
      "main": [
        [
          {
            "node": "Check Task Created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Task Created": {
      "main": [
        [
          {
            "node": "Notify Sales Team",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "pinData": {},
  "tags": ["lead-generation", "sales-automation", "qualification", "email-marketing"]
}